import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import { WikiPage } from '../../types';
import Card from '../ui/Card';

interface WikiEditorProps {
  initialData?: Partial<WikiPage>;
  onSave: (data: Partial<WikiPage>) => void;
  onCancel: () => void;
}

const wikiSchema = Yup.object().shape({
  title: Yup.string()
    .min(3, 'Title must be at least 3 characters')
    .required('Title is required'),
  content: Yup.string()
    .required('Content is required'),
  parentId: Yup.number()
    .nullable(),
});

const WikiEditor: React.FC<WikiEditorProps> = ({ initialData, onSave, onCancel }) => {
  return (
    <Card>
      <Formik
        initialValues={{
          title: initialData?.title || '',
          content: initialData?.content || '',
          parentId: initialData?.parentId || null,
        }}
        validationSchema={wikiSchema}
        onSubmit={(values, { setSubmitting }) => {
          onSave(values);
          setSubmitting(false);
        }}
      >
        {({ isSubmitting }) => (
          <Form className="space-y-4">
            <div>
              <label htmlFor="title" className="label">Title</label>
              <Field
                type="text"
                name="title"
                id="title"
                className="input"
                placeholder="Page title"
              />
              <ErrorMessage name="title" component="div" className="form-error" />
            </div>

            <div>
              <label htmlFor="content" className="label">Content</label>
              <Field
                as="textarea"
                name="content"
                id="content"
                className="input min-h-[400px]"
                placeholder="Write your content here..."
              />
              <ErrorMessage name="content" component="div" className="form-error" />
            </div>

            <div>
              <label htmlFor="parentId" className="label">Parent Page (Optional)</label>
              <Field
                type="number"
                name="parentId"
                id="parentId"
                className="input"
                placeholder="Parent page ID"
              />
              <ErrorMessage name="parentId" component="div" className="form-error" />
            </div>

            <div className="flex justify-end gap-2 pt-4">
              <button
                type="button"
                onClick={onCancel}
                className="btn-secondary"
              >
                Cancel
              </button>
              <button
                type="submit"
                className="btn-primary"
                disabled={isSubmitting}
              >
                {isSubmitting ? 'Saving...' : 'Save'}
              </button>
            </div>
          </Form>
        )}
      </Formik>
    </Card>
  );
};

export default WikiEditor;